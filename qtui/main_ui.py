# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_main(object):
    def setupUi(self, main):
        main.setObjectName("main")
        main.resize(1080, 640)
        self.central_widget = QtWidgets.QWidget(main)
        self.central_widget.setObjectName("central_widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.central_widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.view_original = QtWidgets.QGraphicsView(self.central_widget)
        self.view_original.setObjectName("view_original")
        self.horizontalLayout.addWidget(self.view_original)
        self.view_features = QtWidgets.QGraphicsView(self.central_widget)
        self.view_features.setObjectName("view_features")
        self.horizontalLayout.addWidget(self.view_features)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.result = QtWidgets.QLabel(self.central_widget)
        self.result.setText("")
        self.result.setAlignment(QtCore.Qt.AlignCenter)
        self.result.setObjectName("result")
        self.verticalLayout.addWidget(self.result)
        self.status = QtWidgets.QProgressBar(self.central_widget)
        self.status.setProperty("value", 0)
        self.status.setObjectName("status")
        self.verticalLayout.addWidget(self.status)
        main.setCentralWidget(self.central_widget)
        self.menu_main = QtWidgets.QMenuBar(main)
        self.menu_main.setGeometry(QtCore.QRect(0, 0, 1080, 31))
        self.menu_main.setObjectName("menu_main")
        self.menu_train = QtWidgets.QMenu(self.menu_main)
        self.menu_train.setObjectName("menu_train")
        self.menu_predict = QtWidgets.QMenu(self.menu_main)
        self.menu_predict.setObjectName("menu_predict")
        main.setMenuBar(self.menu_main)
        self.action_train_new = QtWidgets.QAction(main)
        self.action_train_new.setObjectName("action_train_new")
        self.action_train_old = QtWidgets.QAction(main)
        self.action_train_old.setObjectName("action_train_old")
        self.action_predict = QtWidgets.QAction(main)
        self.action_predict.setEnabled(False)
        self.action_predict.setObjectName("action_predict")
        self.action_measure = QtWidgets.QAction(main)
        self.action_measure.setEnabled(False)
        self.action_measure.setObjectName("action_measure")
        self.menu_train.addAction(self.action_train_new)
        self.menu_train.addAction(self.action_train_old)
        self.menu_predict.addAction(self.action_predict)
        self.menu_predict.addAction(self.action_measure)
        self.menu_main.addAction(self.menu_train.menuAction())
        self.menu_main.addAction(self.menu_predict.menuAction())

        self.retranslateUi(main)
        QtCore.QMetaObject.connectSlotsByName(main)

    def retranslateUi(self, main):
        _translate = QtCore.QCoreApplication.translate
        main.setWindowTitle(_translate("main", "猫狗分类器"))
        self.status.setFormat(_translate("main", "缺少模型"))
        self.menu_train.setTitle(_translate("main", "训练"))
        self.menu_predict.setTitle(_translate("main", "预测"))
        self.action_train_new.setText(_translate("main", "训练模型"))
        self.action_train_new.setToolTip(_translate("main", "使用新的训练数据训练模型"))
        self.action_train_new.setShortcut(_translate("main", "Ctrl+T"))
        self.action_train_old.setText(_translate("main", "加载模型"))
        self.action_train_old.setToolTip(_translate("main", "加载预训练的模型"))
        self.action_train_old.setShortcut(_translate("main", "Ctrl+L"))
        self.action_predict.setText(_translate("main", "打开图片"))
        self.action_predict.setToolTip(_translate("main", "打开一张图片进行预测"))
        self.action_predict.setShortcut(_translate("main", "Ctrl+O"))
        self.action_measure.setText(_translate("main", "模型评估"))
        self.action_measure.setToolTip(_translate("main", "选择测试数据评估模型"))
        self.action_measure.setShortcut(_translate("main", "Ctrl+M"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    main = QtWidgets.QMainWindow()
    ui = Ui_main()
    ui.setupUi(main)
    main.show()
    sys.exit(app.exec_())
